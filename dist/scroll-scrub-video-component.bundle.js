class n extends HTMLElement{constructor(){var i;super(),n.maybeDoStaticInitialisation(),this.minWidth=parseInt(null!==(i=this.getAttribute("min-width"))&&void 0!==i?i:"0",10),this.isHidden=!1,this.zoomDuration=parseFloat(getComputedStyle(this).getPropertyValue("--zoom-duration")||"0.2s"),this.componentData={},this.video=null,this.src=null}connectedCallback(){this.attachShadow({mode:"open"}),this.minWidth?window.innerWidth>=this.minWidth?this.loadAndObserve():(this.style.display="none",this.isHidden=!0):this.loadAndObserve(),n.scrubVideos.add(this)}loadAndObserve(){this.render(),this.video=this.shadowRoot.querySelector("video"),this.video&&this.preloadVideo().then((()=>{const i=this.shadowRoot.querySelector(".scrub-video-container");i?(i.ScrollScrubVideoComponent=this,n.observer.observe(i),n.observedElements.add(this),n.updateScrubVideos()):console.warn("scrub-video-container not found in shadow DOM")}))}disconnectedCallback(){}static maybeDoStaticInitialisation(){n.observer||(n.observer=new IntersectionObserver(n.intersectionObserverCallback,{threshold:1}),document.addEventListener("scroll",n.handleScrollEvent),window.addEventListener("resize",n.updateScrubVideos),n.scrubVideos=new Set,n.observedElements=new Set)}static intersectionObserverCallback(i,t){i.forEach((i=>{const t=1===i.intersectionRatio,o=i.target;i.target.classList.add("animating"),i.target.classList.toggle("in-view",t);const e=1e3*o.ScrollScrubVideoComponent.zoomDuration;setTimeout((()=>{i.target.classList.remove("animating")}),e),t&&(n.activeVideoComponent=o.ScrollScrubVideoComponent,n.handleScrollEvent())}))}static updateScrubVideos(){n.scrubVideos.forEach((i=>{const t=i.getBoundingClientRect(),{y:o,bottom:e}=t,s=o+window.scrollY,a=e-window.innerHeight+window.scrollY;i.minWidth&&window.innerWidth<i.minWidth?(i.style.display="none",i.isHidden=!0):i.isHidden&&window.innerWidth>=i.minWidth&&(i.style.display="block",i.isHidden=!1,n.observedElements.has(i)||i.loadAndObserve()),i.componentData={lower:s,upper:a,video:i.shadowRoot.querySelector("video")}}))}static handleScrollEvent(){if(n.activeVideoComponent){const i=n.activeVideoComponent.componentData,{lower:t,upper:o,video:e}=i;if(e){const i=Math.max(Math.min((window.scrollY-t)/(o-t),n.OVERSCRUB_AVOIDANCE_FACTOR),0)*e.duration;isFinite(i)&&!isNaN(e.duration)&&(e.currentTime=i)}}}preloadVideo(){return this.src?fetch(this.src).then((n=>n.blob())).then((n=>{let i=URL.createObjectURL(n);this.video&&this.video.setAttribute("src",i),this.classList.add("video-loaded")})):Promise.resolve()}render(){this.src=this.getAttribute("src");let n=this.getAttribute("firefox-src");if(n){navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&(this.src=n)}this.shadowRoot.innerHTML=`\n      \n  <style>\n      :host {\n          display: block;\n      }\n\n      :host(.video-loaded) {\n          height: calc(100vh * var(--scrub-pages, 6));\n      }\n\n      :host(.video-loaded) video {\n          opacity: 1;\n      }\n      \n      .scrub-video-container {\n          position: sticky;\n          top: 0px;\n          height: 100vh;\n          margin-left: var(--unzoomed-margin-left, 5rem);\n          margin-right: var(--unzoomed-margin-right, 5rem);                \n      }\n      \n      .scrub-video-container.animating {\n          transition: all var(--zoom-duration, 0.2s);\n      }\n\n      .scrub-video-container.animating video {\n          transition: all var(--zoom-duration, 0.2s), opacity var(--load-fade-duration, 0.2s);\n      }\n\n      .scrub-video-container.in-view {\n          margin: 0;\n      }\n\n      .scrub-video-container.in-view video {\n          top: 0;\n          height: 100%;\n      }\n\n      video {\n          position: absolute;\n          top: var(--unzoomed-margin-top, 3rem);\n          left: 0;\n          width: 100%;\n          height: calc(100% - var(--unzoomed-margin-top, 3rem) - var(--unzoomed-margin-bottom, 3rem));\n          object-fit: cover;\n          opacity: 0;\n          transition: opacity var(--load-fade-duration, 0.2s);\n      }\n  </style>\n\n      <div class='scrub-video-container'>\n          <video src='${this.src}' muted  playsinline></video>\n      </div>`}}n.OVERSCRUB_AVOIDANCE_FACTOR=.99,customElements.define("scroll-scrub-video",n);
