{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/debounce.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debounce",
          "parameters": [
            {
              "name": "callback"
            },
            {
              "name": "frequency",
              "default": "250"
            },
            {
              "name": "timer",
              "default": "null",
              "type": {
                "text": "number | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "src/debounce.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/scroll-scrub-video-component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ScrollScrubVideoComponent",
          "members": [
            {
              "kind": "field",
              "name": "isHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "zoomDuration",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "video",
              "type": {
                "text": "HTMLVideoElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "isInited",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "videoContainer",
              "type": {
                "text": "VideoContainer | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "loadAndObserve"
            },
            {
              "kind": "field",
              "name": "minWidth"
            },
            {
              "kind": "method",
              "name": "doStaticInitialisation",
              "static": true
            },
            {
              "kind": "method",
              "name": "intersectionObserverCallback",
              "static": true,
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "IntersectionObserverEntry[]"
                  }
                },
                {
                  "name": "_",
                  "type": {
                    "text": "IntersectionObserver"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateAllScrollScrubComponents",
              "static": true
            },
            {
              "kind": "method",
              "name": "handleScrollEvent",
              "static": true
            },
            {
              "kind": "method",
              "name": "preloadVideo",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "src"
            },
            {
              "name": "firefox-src"
            },
            {
              "name": "min-width"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "scroll-scrub-video",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "scroll-scrub-video",
          "declaration": {
            "name": "ScrollScrubVideoComponent",
            "module": "src/scroll-scrub-video-component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "default": "`\n  <style>\n      :host {\n          display: block;\n      }\n\n      :host(.video-loaded) {\n          height: calc(100vh * var(--scrub-pages, 6));\n      }\n\n      :host(.video-loaded) video {\n          opacity: 1;\n      }\n      \n      .scrub-video-container {\n          position: sticky;\n          top: 0px;\n          height: 100vh;\n          margin-left: var(--unzoomed-margin-left, 5rem);\n          margin-right: var(--unzoomed-margin-right, 5rem);                \n      }\n      \n      .scrub-video-container.animating {\n          transition: all var(--zoom-duration, 0.2s);\n      }\n\n      .scrub-video-container.animating video {\n          transition: all var(--zoom-duration, 0.2s), opacity var(--load-fade-duration, 0.2s);\n      }\n\n      .scrub-video-container.in-view {\n          margin: 0;\n      }\n\n      .scrub-video-container.in-view video {\n          top: 0;\n          height: 100%;\n      }\n\n      video {\n          position: absolute;\n          top: var(--unzoomed-margin-top, 3rem);\n          left: 0;\n          width: 100%;\n          height: calc(100% - var(--unzoomed-margin-top, 3rem) - var(--unzoomed-margin-bottom, 3rem));\n          object-fit: cover;\n          opacity: 0;\n          transition: opacity var(--load-fade-duration, 0.2s);\n      }\n  </style>\n`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles.ts"
          }
        }
      ]
    }
  ]
}
